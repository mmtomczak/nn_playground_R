% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nn.R
\docType{class}
\name{tfmodel}
\alias{tfmodel}
\title{Class R6 representing a TensorFlow model}
\format{
\code{R6Class} object.
}
\value{
Object of \code{R6Class} with methods allowing to build a simple neural network
}
\description{
Class R6 representing a TensorFlow model

Class R6 representing a TensorFlow model
}
\section{Important Information}{

\describe{
\item{\code{Package dependencies}}{To run package prior installation of python and keras for R is required. To do this, use the following commands: \cr install.packages("reticulate") \cr install.packages("keras") \cr reticulate::install_python() \cr library(keras) \cr install_keras()}
}
}

\section{Methods}{

\describe{
\item{\code{new(name, input_shape, output_shape, data, test_split)}}{Method used to create \code{tfmodel} class object. Values of \code{input_shape} and \code{output_shape} are integers used to create layers stored in fields \code{inputs} and \code{outputs}}
\item{\code{add_layer(layer_type, units, act_func)}}{Method used to add a new layer to the model. Argument \code{layer_type} may be "Dense" or "Dropout" with \code{units} number of neurons for "Dense" layer and \code{act_func} activation function ("relu", "linear" or "elu") or \code{units} fraction of randomly selected neurons dropped for "Dropout" layer (in this case \code{act_func} argument will be ignored)}
\item{\code{build_model(optimizer, lr)}}{Builds and compiles the model with \code{optimizer} optimizer function ("adam", "adamax", "sgd" or "ftrl") with \code{lr} learning rate}
\item{\code{train(epochs)}}{Trains the compiled model for \code{epochs} number of epochs. Requires using \code{build_model(optimizer, lr)} before.}
\item{\code{predict(x)}}{Predicts the labels for x. Requires trained model.}
\item{\code{train_test_split_data}}{Splits the field \code{data} into train and test datasets. Used by \code{predict(x)} method. Returns list of X_train, X_test, y_train, y_test created from \code{data}}
\item{\code{add_layers_from_df(layers_df)}}{Adds layers stored in rows of \code{layers_df} data frame into the model.}
}
}

\examples{
tfmodel$new("sample_model", 7, 3, data.frame(x=list(1,2), y=list(10,20)), 0.2)
tfmodel$new("my_model", 4, 3, iris, 0.15)
}
\author{
Mateusz Tomczak
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{name}}{Model name.}

\item{\code{layers}}{List of layers that will be used to build a neural network.}

\item{\code{input_shape}}{Input dimension equal to number of features in the input.}

\item{\code{output_shape}}{Output dimension equal to the number of unique target values.}

\item{\code{model}}{Compiled TensorFlow model.}

\item{\code{history}}{Training history data by epoch.}

\item{\code{data}}{Dataset that will be used by the model}

\item{\code{test_split}}{Percentage of the observations that will be used as a test set/validation set}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-tfmodel-new}{\code{tfmodel$new()}}
\item \href{#method-tfmodel-add_layer}{\code{tfmodel$add_layer()}}
\item \href{#method-tfmodel-build_model}{\code{tfmodel$build_model()}}
\item \href{#method-tfmodel-train}{\code{tfmodel$train()}}
\item \href{#method-tfmodel-predict}{\code{tfmodel$predict()}}
\item \href{#method-tfmodel-train_test_split_data}{\code{tfmodel$train_test_split_data()}}
\item \href{#method-tfmodel-add_layers_from_df}{\code{tfmodel$add_layers_from_df()}}
\item \href{#method-tfmodel-clone}{\code{tfmodel$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tfmodel-new"></a>}}
\if{latex}{\out{\hypertarget{method-tfmodel-new}{}}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tfmodel$new(name, input_shape, output_shape, data, test_split)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tfmodel-add_layer"></a>}}
\if{latex}{\out{\hypertarget{method-tfmodel-add_layer}{}}}
\subsection{Method \code{add_layer()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tfmodel$add_layer(layer_type, units, act_func)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tfmodel-build_model"></a>}}
\if{latex}{\out{\hypertarget{method-tfmodel-build_model}{}}}
\subsection{Method \code{build_model()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tfmodel$build_model(optimizer, lr)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tfmodel-train"></a>}}
\if{latex}{\out{\hypertarget{method-tfmodel-train}{}}}
\subsection{Method \code{train()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tfmodel$train(epochs)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tfmodel-predict"></a>}}
\if{latex}{\out{\hypertarget{method-tfmodel-predict}{}}}
\subsection{Method \code{predict()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tfmodel$predict(x)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tfmodel-train_test_split_data"></a>}}
\if{latex}{\out{\hypertarget{method-tfmodel-train_test_split_data}{}}}
\subsection{Method \code{train_test_split_data()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tfmodel$train_test_split_data()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tfmodel-add_layers_from_df"></a>}}
\if{latex}{\out{\hypertarget{method-tfmodel-add_layers_from_df}{}}}
\subsection{Method \code{add_layers_from_df()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tfmodel$add_layers_from_df(layers_df)}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-tfmodel-clone"></a>}}
\if{latex}{\out{\hypertarget{method-tfmodel-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{tfmodel$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
